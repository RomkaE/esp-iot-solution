stages:
  - build
  - deploy

before_script:
  - export PATH="/opt/xtensa-esp32-elf/bin:$PATH"
  - export PATH="/opt/esp32ulp-elf-binutils/bin:$PATH"
  - export PATH="$CI_PROJECT_DIR/submodule/esp-idf/tools:$PATH"
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -n $GITLAB_KEY > ~/.ssh/id_rsa_base64
  - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - git submodule update -f --init --recursive

variables:
  IDF_PATH: "$CI_PROJECT_DIR/submodule/esp-idf"
  IOT_SOLUTION_PATH: "$CI_PROJECT_DIR"

build:
  stage: build
  tags:
    - iot
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  script:
    - echo "set -e" >> _ci_build.sh
    - echo "set -u" >> _ci_build.sh
    - echo "project_list=( \\" >> _ci_build.sh
    - echo "examples/check_pedestrian_flow \\" >> _ci_build.sh
    - echo "examples/empty_project \\" >> _ci_build.sh
    - echo "examples/eth2wifi \\" >> _ci_build.sh
    - echo "examples/lowpower_evb \\" >> _ci_build.sh
    - echo "examples/oled_screen_module \\" >> _ci_build.sh
    - echo "examples/touch_pad_evb \\" >> _ci_build.sh
    - echo "examples/ulp_examples/ulp_adc \\" >> _ci_build.sh
    - echo "examples/ulp_examples/ulp_detect_brownout \\" >> _ci_build.sh
    - echo "examples/ulp_examples/ulp_hall_sensor \\" >> _ci_build.sh
    - echo "examples/ulp_examples/ulp_i2c_bitbang \\" >> _ci_build.sh
    - echo "examples/ulp_examples/ulp_rtc_gpio \\" >> _ci_build.sh
    - echo "examples/ulp_examples/ulp_send_interrupt \\" >> _ci_build.sh
    - echo "examples/ulp_examples/ulp_spi \\" >> _ci_build.sh
    - echo "examples/ulp_examples/ulp_tsens \\" >> _ci_build.sh
    - echo "examples/ulp_examples/ulp_watering_device \\" >> _ci_build.sh
    - echo ")" >> _ci_build.sh
    - echo "old_path="$PWD"" >> _ci_build.sh
    - echo "for dir in \${project_list[@]};" >> _ci_build.sh
    - echo "do" >> _ci_build.sh
    - echo "    cd \$dir" >> _ci_build.sh
    - echo "    make defconfig && make -j8" >> _ci_build.sh
    - echo "    cd \$old_path" >> _ci_build.sh
    - echo "done" >> _ci_build.sh
    - cat _ci_build.sh
    - bash _ci_build.sh
    - cd tools/unit-test-app
    - make defconfig && make IOT_TEST_ALL=1 -j8

push_to_github:
  stage: deploy
  only:
    - master
    - /^release\/v/
#  when: on_success
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_STRATEGY: clone
  before_script:
    - echo "skip default before_script"
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY > ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git remote remove github &>/dev/null || true
    - git remote add github git@github.com:espressif/esp-iot-solution.git
    - ${IOT_SOLUTION_PATH}/tools/ci/push_to_github.sh
